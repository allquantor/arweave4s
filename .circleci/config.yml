version: 2


sbt-build: &sbt-build
  docker:
    - image: upvest/scala-sbt-docker-k8:stable
  steps:
    - run: mkdir ~/.sbt/gpg
    - run: echo $PGPKEY | base64 --decode --ignore-garbage > ~/.sbt/gpg/secring.asc
    - run: gpg --batch --allow-secret-key-import --import ~/.sbt/gpg/secring.asc
    - run: git config --global user.signingkey 4BFE56CB1EAEFD90
    - run: git config --global user.email ivan@upvest.co
    - run: git config --global user.name "Upvest/Arweave4s"
    - checkout
    - run: git branch -u origin/$CIRCLE_BRANCH
    - setup_remote_docker:
        docker_layer_caching: true
        version: 17.09.0-ce
    - restore_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
    - run: sbt -Xms512m -Xmx2g -XX:+UseConcMarkSweepGC -XX:ReservedCodeCacheSize=256m -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -no-colors -batch "$SBT_COMMAND"
    - run: rm ~/.sbt/gpg/secring.asc
    - run: rm -rf ~/.gnupg
    - save_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
        paths:
          - ~/.m2
          - ~/.ivy2
          - ~/.sbt
    - store_artifacts:
        path: core/target/scala-2.12/api/
        destination: scaladoc/core
    - store_artifacts:
        path: core/target/test-reports/
        destination: test-reports/core
    - store_test_results:
        path: core/target/test-reports/


jobs:

  test:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "; compile; clean; coverage; test; coverageReport; coverageAggregate; doc"

  integration-test:
    docker:
      - image: alpine
    resource_class: large
    steps:
      - run: apk update && apk add curl git openssh-client
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - checkout
      - run: docker-compose build
      - run: docker-compose run it
      - run: docker-compose logs > logs
      - store_artifacts:
          path: logs
          destination: docker-compose-logs

  release:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "; project core; release with-defaults"

  release-snapshot:
    <<: *sbt-build
    resource_class: large
    environment:
      SBT_COMMAND: "core/publishSigned"

workflows:
  version: 2

  ci:
    jobs:
      - test
      - integration-test

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
                - develop
    jobs:
      - test
      - integration-test

  release:
    jobs:
      - release:
          filters:
            branches:
              only: master
      - release-snapshot:
          filters:
            branches:
              only: develop
