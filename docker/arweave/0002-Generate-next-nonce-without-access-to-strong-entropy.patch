From ec4cbb9aa07615b9ac8fe15be3b58dd501156977 Mon Sep 17 00:00:00 2001
From: Gustav Behm <gustav@upvest.co>
Date: Sun, 13 May 2018 13:38:14 +0200
Subject: [PATCH 2/2] Generate next nonce without access to strong entropy

---
 src/ar_mine.erl  | 29 +++++++++++++++++++++--------
 src/ar_weave.erl |  5 +----
 2 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/src/ar_mine.erl b/src/ar_mine.erl
index 5f629ff..bc67271 100644
--- a/src/ar_mine.erl
+++ b/src/ar_mine.erl
@@ -13,7 +13,8 @@
 	diff,
 	data,
 	delay,
-	txs
+	txs,
+	nonces
 }).
 
 %% @doc Returns the PID of a new mining worker process.
@@ -33,7 +34,8 @@ start(Hash, Diff, Data, Delay, TXs) ->
 						diff = Diff,
 						data = Data,
 						delay = Delay,
-						txs = TXs
+						txs = TXs,
+						nonces = []
 					}
 				)
 			)
@@ -55,7 +57,8 @@ server(
 		hash = Hash,
 		diff = Diff,
 		data = Data,
-		txs = TXs
+		txs = TXs,
+		nonces = Nonces
 	}) ->
 	receive
 		stop ->
@@ -70,11 +73,15 @@ server(
 			);
 		hash ->
 			schedule_hash(S),
-			case validate(Hash, Diff, Data, Nonce = generate()) of
-				false -> server(S);
+			case validate(Hash, Diff, Data, Nonces) of
+				false ->
+					case (length(Nonces) > 256) and coinflip() of
+						false -> server(S#state { nonces = [bool_to_binary(coinflip())|Nonces] });
+						true -> server(S#state { nonces = [] })
+					end;
 				NextHash ->
 					%ar:report_console([{miner, self()}, {found_block, Nonce}]),
-					Parent ! {work_complete, TXs, Hash, NextHash, Diff, Nonce},
+					Parent ! {work_complete, TXs, Hash, NextHash, Diff, iolist_to_binary(Nonces)},
 					ok
 			end
 	end.
@@ -96,8 +103,14 @@ schedule_hash(S = #state { delay = Delay }) ->
 	spawn(fun() -> receive after ar:scale_time(Delay) -> Parent ! hash end end),
 	S.
 
-%% @doc Generate a random nonce, to be added to the previous hash.
-generate() -> crypto:strong_rand_bytes(8).
+bool_to_binary(true) -> <<1>>;
+bool_to_binary(false) -> <<0>>.
+
+coinflip() ->
+	case rand:uniform(2) of
+		1 -> true;
+		2 -> false
+	end.
 
 %%% Tests
 
diff --git a/src/ar_weave.erl b/src/ar_weave.erl
index 237dafc..d5ccd53 100644
--- a/src/ar_weave.erl
+++ b/src/ar_weave.erl
@@ -144,10 +144,7 @@ generate_block_data(TXs) ->
 hash(B, TXs, Nonce) when is_record(B, block) ->
 	hash(B#block.hash, generate_block_data(TXs), Nonce);
 hash(Hash, TXs, Nonce) ->
-	crypto:hash(
-		?HASH_ALG,
-		<< Nonce/binary, Hash/binary, TXs/binary >>
-	).
+	crypto:hash(?HASH_ALG, erlang:iolist_to_iovec([Nonce, Hash, TXs])).
 
 %% @doc Create an independent hash from a block. Independent hashes
 %% verify a block's contents in isolation and are stored in a node's hash list.
-- 
2.17.0

